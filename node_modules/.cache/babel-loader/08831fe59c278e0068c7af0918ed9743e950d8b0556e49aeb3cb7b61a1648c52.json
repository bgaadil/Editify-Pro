{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91883\\\\Downloads\\\\editify-react\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from \"react\";\nimport perspective from \"perspective-transform\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const canvasRef = useRef(null);\n  const [imageSrc, setImageSrc] = useState(null);\n  const [imageSize, setImageSize] = useState({\n    width: 0,\n    height: 0\n  });\n  const [drawOffset, setDrawOffset] = useState({\n    x: 0,\n    y: 0\n  });\n  const [showResize, setShowResize] = useState(false);\n  const [dimensions, setDimensions] = useState({\n    width: \"\",\n    height: \"\"\n  });\n  const [isCropping, setIsCropping] = useState(false);\n  const [draggingPoint, setDraggingPoint] = useState(null);\n  const [cropPoints, setCropPoints] = useState([]);\n  const [textInputs, setTextInputs] = useState([]);\n  const [currentText, setCurrentText] = useState(\"\");\n  const [isAddingText, setIsAddingText] = useState(false);\n  const [history, setHistory] = useState([]);\n  const CANVAS_WIDTH = 800;\n  const CANVAS_HEIGHT = 600;\n  const saveToHistory = () => {\n    const canvas = canvasRef.current;\n    const data = canvas.toDataURL();\n    setHistory(prev => [...prev, data]);\n  };\n  const undo = () => {\n    if (history.length === 0) return;\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    const img = new Image();\n    img.onload = () => {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      ctx.drawImage(img, 0, 0);\n      setImageSrc(canvas.toDataURL());\n    };\n    img.src = history[history.length - 1];\n    setHistory(prev => prev.slice(0, -1));\n  };\n  const handleUpload = e => {\n    const file = e.target.files[0];\n    if (!file) return;\n    const reader = new FileReader();\n    reader.onload = event => {\n      const img = new Image();\n      img.onload = () => {\n        const canvas = canvasRef.current;\n        const ctx = canvas.getContext(\"2d\");\n        const widthRatio = CANVAS_WIDTH / img.width;\n        const heightRatio = CANVAS_HEIGHT / img.height;\n        const scale = Math.min(widthRatio, heightRatio);\n        const newWidth = img.width * scale;\n        const newHeight = img.height * scale;\n        const offsetX = (CANVAS_WIDTH - newWidth) / 2;\n        const offsetY = (CANVAS_HEIGHT - newHeight) / 2;\n        canvas.width = CANVAS_WIDTH;\n        canvas.height = CANVAS_HEIGHT;\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        ctx.drawImage(img, offsetX, offsetY, newWidth, newHeight);\n        setImageSrc(event.target.result);\n        setImageSize({\n          width: newWidth,\n          height: newHeight\n        });\n        setDrawOffset({\n          x: offsetX,\n          y: offsetY\n        });\n        setDimensions({\n          width: newWidth,\n          height: newHeight\n        });\n        setCropPoints([{\n          x: offsetX + 20,\n          y: offsetY + 20\n        }, {\n          x: offsetX + newWidth - 20,\n          y: offsetY + 20\n        }, {\n          x: offsetX + newWidth - 20,\n          y: offsetY + newHeight - 20\n        }, {\n          x: offsetX + 20,\n          y: offsetY + newHeight - 20\n        }]);\n        saveToHistory();\n      };\n      img.src = event.target.result;\n    };\n    reader.readAsDataURL(file);\n  };\n  const redrawCanvas = () => {\n    if (!imageSrc) return;\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    const img = new Image();\n    img.onload = () => {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      ctx.drawImage(img, drawOffset.x, drawOffset.y, imageSize.width, imageSize.height);\n      textInputs.forEach(({\n        text,\n        x,\n        y\n      }) => {\n        ctx.font = \"20px Arial\";\n        ctx.fillStyle = \"black\";\n        ctx.fillText(text, x, y);\n      });\n      if (isCropping && cropPoints.length === 4) {\n        ctx.strokeStyle = \"red\";\n        ctx.lineWidth = 2;\n        ctx.beginPath();\n        ctx.moveTo(cropPoints[0].x, cropPoints[0].y);\n        for (let i = 1; i < 4; i++) {\n          ctx.lineTo(cropPoints[i].x, cropPoints[i].y);\n        }\n        ctx.closePath();\n        ctx.stroke();\n        cropPoints.forEach(pt => {\n          ctx.fillStyle = \"blue\";\n          ctx.beginPath();\n          ctx.arc(pt.x, pt.y, 6, 0, 2 * Math.PI);\n          ctx.fill();\n        });\n      }\n    };\n    img.src = imageSrc;\n  };\n  useEffect(() => {\n    redrawCanvas();\n  }, [imageSrc, cropPoints, isCropping, textInputs]);\n  const handleMouseDown = e => {\n    if (isAddingText) {\n      const rect = canvasRef.current.getBoundingClientRect();\n      const x = e.clientX - rect.left;\n      const y = e.clientY - rect.top;\n      setTextInputs([...textInputs, {\n        text: currentText,\n        x,\n        y\n      }]);\n      setIsAddingText(false);\n      setCurrentText(\"\");\n      saveToHistory();\n      return;\n    }\n    if (!isCropping) return;\n    const rect = canvasRef.current.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    cropPoints.forEach((point, idx) => {\n      const dx = x - point.x;\n      const dy = y - point.y;\n      if (Math.sqrt(dx * dx + dy * dy) < 10) {\n        setDraggingPoint(idx);\n      }\n    });\n  };\n  const handleMouseMove = e => {\n    if (!isCropping || draggingPoint === null) return;\n    const rect = canvasRef.current.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    const updated = [...cropPoints];\n    updated[draggingPoint] = {\n      x,\n      y\n    };\n    setCropPoints(updated);\n  };\n  const handleMouseUp = () => {\n    setDraggingPoint(null);\n  };\n  const handleResize = () => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    const img = new Image();\n    img.onload = () => {\n      canvas.width = dimensions.width;\n      canvas.height = dimensions.height;\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      ctx.drawImage(img, 0, 0, dimensions.width, dimensions.height);\n      saveToHistory();\n    };\n    img.src = imageSrc;\n  };\n  const handleCrop = () => {\n    if (cropPoints.length !== 4) return;\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    const img = new Image();\n    img.onload = () => {\n      const srcCoords = cropPoints.map(pt => [pt.x, pt.y]);\n      const targetSize = 300;\n      const dstCoords = [[0, 0], [targetSize, 0], [targetSize, targetSize], [0, targetSize]];\n      const transform = perspective(srcCoords, dstCoords);\n      const output = document.createElement(\"canvas\");\n      output.width = targetSize;\n      output.height = targetSize;\n      const outCtx = output.getContext(\"2d\");\n      const imageData = outCtx.createImageData(targetSize, targetSize);\n      for (let y = 0; y < targetSize; y++) {\n        for (let x = 0; x < targetSize; x++) {\n          const [sx, sy] = transform.inverse([x, y]);\n          const px = Math.floor(sx);\n          const py = Math.floor(sy);\n          if (px >= 0 && py >= 0 && px < canvas.width && py < canvas.height) {\n            const srcData = ctx.getImageData(px, py, 1, 1).data;\n            const index = (y * targetSize + x) * 4;\n            imageData.data[index] = srcData[0];\n            imageData.data[index + 1] = srcData[1];\n            imageData.data[index + 2] = srcData[2];\n            imageData.data[index + 3] = srcData[3];\n          }\n        }\n      }\n      outCtx.putImageData(imageData, 0, 0);\n      const newSrc = output.toDataURL();\n      setImageSrc(newSrc);\n      setIsCropping(false);\n      setCropPoints([]);\n      saveToHistory();\n    };\n    img.src = imageSrc;\n  };\n  const applyFilter = () => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n    for (let i = 0; i < imageData.data.length; i += 4) {\n      const avg = (imageData.data[i] + imageData.data[i + 1] + imageData.data[i + 2]) / 3;\n      imageData.data[i] = avg;\n      imageData.data[i + 1] = avg;\n      imageData.data[i + 2] = avg;\n    }\n    ctx.putImageData(imageData, 0, 0);\n    saveToHistory();\n  };\n  const handleDownload = () => {\n    const canvas = canvasRef.current;\n    const url = canvas.toDataURL(\"image/png\");\n    const link = document.createElement(\"a\");\n    link.href = url;\n    link.download = \"edited-image.png\";\n    link.click();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"w-64 bg-gray-100 dark:bg-gray-800 p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-xl font-bold mb-4\",\n        children: \"\\uD83D\\uDD8C\\uFE0F Editify\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        onChange: handleUpload,\n        className: \"mb-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowResize(!showResize),\n        className: \"w-full py-2 px-4 bg-blue-500 text-white rounded mb-2\",\n        children: \"Resize\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this), showResize && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-2 mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: \"Width\",\n          value: dimensions.width,\n          onChange: e => setDimensions({\n            ...dimensions,\n            width: +e.target.value\n          }),\n          className: \"w-full p-2 border rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: \"Height\",\n          value: dimensions.height,\n          onChange: e => setDimensions({\n            ...dimensions,\n            height: +e.target.value\n          }),\n          className: \"w-full p-2 border rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleResize,\n          className: \"w-full py-2 px-4 bg-green-600 text-white rounded\",\n          children: \"Apply Resize\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: applyFilter,\n        className: \"w-full py-2 px-4 bg-indigo-600 text-white rounded mb-2\",\n        children: \"Grayscale Filter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: currentText,\n          onChange: e => setCurrentText(e.target.value),\n          className: \"w-full p-2 border rounded mb-2\",\n          placeholder: \"Enter text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsAddingText(true),\n          className: \"w-full py-2 px-4 bg-yellow-600 text-white rounded\",\n          children: \"Add Text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: undo,\n        className: \"w-full py-2 px-4 bg-gray-500 text-white rounded mb-2\",\n        children: \"Undo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `w-full py-2 px-4 rounded mb-2 ${isCropping ? \"bg-red-500 text-white\" : \"bg-gray-200 dark:bg-gray-700\"}`,\n        onClick: () => setIsCropping(!isCropping),\n        children: isCropping ? \"Exit Crop Mode\" : \"Crop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this), isCropping && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCrop,\n        className: \"w-full py-2 px-4 bg-yellow-500 text-white rounded mb-2\",\n        children: \"Apply Crop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDownload,\n        className: \"w-full py-2 px-4 bg-purple-600 text-white rounded\",\n        children: \"Download\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"flex-1 flex items-center justify-center bg-white dark:bg-gray-900\",\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        width: CANVAS_WIDTH,\n        height: CANVAS_HEIGHT,\n        onMouseDown: handleMouseDown,\n        onMouseMove: handleMouseMove,\n        onMouseUp: handleMouseUp,\n        className: \"shadow-lg border border-gray-300\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 258,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"hzQMYpLExFAYR7+tUOtRAH4X+o0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useRef","useState","useEffect","perspective","jsxDEV","_jsxDEV","App","_s","canvasRef","imageSrc","setImageSrc","imageSize","setImageSize","width","height","drawOffset","setDrawOffset","x","y","showResize","setShowResize","dimensions","setDimensions","isCropping","setIsCropping","draggingPoint","setDraggingPoint","cropPoints","setCropPoints","textInputs","setTextInputs","currentText","setCurrentText","isAddingText","setIsAddingText","history","setHistory","CANVAS_WIDTH","CANVAS_HEIGHT","saveToHistory","canvas","current","data","toDataURL","prev","undo","length","ctx","getContext","img","Image","onload","clearRect","drawImage","src","slice","handleUpload","e","file","target","files","reader","FileReader","event","widthRatio","heightRatio","scale","Math","min","newWidth","newHeight","offsetX","offsetY","result","readAsDataURL","redrawCanvas","forEach","text","font","fillStyle","fillText","strokeStyle","lineWidth","beginPath","moveTo","i","lineTo","closePath","stroke","pt","arc","PI","fill","handleMouseDown","rect","getBoundingClientRect","clientX","left","clientY","top","point","idx","dx","dy","sqrt","handleMouseMove","updated","handleMouseUp","handleResize","handleCrop","srcCoords","map","targetSize","dstCoords","transform","output","document","createElement","outCtx","imageData","createImageData","sx","sy","inverse","px","floor","py","srcData","getImageData","index","putImageData","newSrc","applyFilter","avg","handleDownload","url","link","href","download","click","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","onClick","placeholder","value","ref","onMouseDown","onMouseMove","onMouseUp","_c","$RefreshReg$"],"sources":["C:/Users/91883/Downloads/editify-react/src/App.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\nimport perspective from \"perspective-transform\";\n\nfunction App() {\n  const canvasRef = useRef(null);\n  const [imageSrc, setImageSrc] = useState(null);\n  const [imageSize, setImageSize] = useState({ width: 0, height: 0 });\n  const [drawOffset, setDrawOffset] = useState({ x: 0, y: 0 });\n  const [showResize, setShowResize] = useState(false);\n  const [dimensions, setDimensions] = useState({ width: \"\", height: \"\" });\n  const [isCropping, setIsCropping] = useState(false);\n  const [draggingPoint, setDraggingPoint] = useState(null);\n  const [cropPoints, setCropPoints] = useState([]);\n  const [textInputs, setTextInputs] = useState([]);\n  const [currentText, setCurrentText] = useState(\"\");\n  const [isAddingText, setIsAddingText] = useState(false);\n  const [history, setHistory] = useState([]);\n\n  const CANVAS_WIDTH = 800;\n  const CANVAS_HEIGHT = 600;\n\n  const saveToHistory = () => {\n    const canvas = canvasRef.current;\n    const data = canvas.toDataURL();\n    setHistory((prev) => [...prev, data]);\n  };\n\n  const undo = () => {\n    if (history.length === 0) return;\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    const img = new Image();\n    img.onload = () => {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      ctx.drawImage(img, 0, 0);\n      setImageSrc(canvas.toDataURL());\n    };\n    img.src = history[history.length - 1];\n    setHistory((prev) => prev.slice(0, -1));\n  };\n\n  const handleUpload = (e) => {\n    const file = e.target.files[0];\n    if (!file) return;\n\n    const reader = new FileReader();\n    reader.onload = (event) => {\n      const img = new Image();\n      img.onload = () => {\n        const canvas = canvasRef.current;\n        const ctx = canvas.getContext(\"2d\");\n\n        const widthRatio = CANVAS_WIDTH / img.width;\n        const heightRatio = CANVAS_HEIGHT / img.height;\n        const scale = Math.min(widthRatio, heightRatio);\n\n        const newWidth = img.width * scale;\n        const newHeight = img.height * scale;\n        const offsetX = (CANVAS_WIDTH - newWidth) / 2;\n        const offsetY = (CANVAS_HEIGHT - newHeight) / 2;\n\n        canvas.width = CANVAS_WIDTH;\n        canvas.height = CANVAS_HEIGHT;\n\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        ctx.drawImage(img, offsetX, offsetY, newWidth, newHeight);\n\n        setImageSrc(event.target.result);\n        setImageSize({ width: newWidth, height: newHeight });\n        setDrawOffset({ x: offsetX, y: offsetY });\n        setDimensions({ width: newWidth, height: newHeight });\n\n        setCropPoints([\n          { x: offsetX + 20, y: offsetY + 20 },\n          { x: offsetX + newWidth - 20, y: offsetY + 20 },\n          { x: offsetX + newWidth - 20, y: offsetY + newHeight - 20 },\n          { x: offsetX + 20, y: offsetY + newHeight - 20 },\n        ]);\n        saveToHistory();\n      };\n      img.src = event.target.result;\n    };\n    reader.readAsDataURL(file);\n  };\n\n  const redrawCanvas = () => {\n    if (!imageSrc) return;\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n\n    const img = new Image();\n    img.onload = () => {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      ctx.drawImage(\n        img,\n        drawOffset.x,\n        drawOffset.y,\n        imageSize.width,\n        imageSize.height\n      );\n\n      textInputs.forEach(({ text, x, y }) => {\n        ctx.font = \"20px Arial\";\n        ctx.fillStyle = \"black\";\n        ctx.fillText(text, x, y);\n      });\n\n      if (isCropping && cropPoints.length === 4) {\n        ctx.strokeStyle = \"red\";\n        ctx.lineWidth = 2;\n        ctx.beginPath();\n        ctx.moveTo(cropPoints[0].x, cropPoints[0].y);\n        for (let i = 1; i < 4; i++) {\n          ctx.lineTo(cropPoints[i].x, cropPoints[i].y);\n        }\n        ctx.closePath();\n        ctx.stroke();\n\n        cropPoints.forEach((pt) => {\n          ctx.fillStyle = \"blue\";\n          ctx.beginPath();\n          ctx.arc(pt.x, pt.y, 6, 0, 2 * Math.PI);\n          ctx.fill();\n        });\n      }\n    };\n    img.src = imageSrc;\n  };\n\n  useEffect(() => {\n    redrawCanvas();\n  }, [imageSrc, cropPoints, isCropping, textInputs]);\n\n  const handleMouseDown = (e) => {\n    if (isAddingText) {\n      const rect = canvasRef.current.getBoundingClientRect();\n      const x = e.clientX - rect.left;\n      const y = e.clientY - rect.top;\n      setTextInputs([...textInputs, { text: currentText, x, y }]);\n      setIsAddingText(false);\n      setCurrentText(\"\");\n      saveToHistory();\n      return;\n    }\n    if (!isCropping) return;\n    const rect = canvasRef.current.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n\n    cropPoints.forEach((point, idx) => {\n      const dx = x - point.x;\n      const dy = y - point.y;\n      if (Math.sqrt(dx * dx + dy * dy) < 10) {\n        setDraggingPoint(idx);\n      }\n    });\n  };\n\n  const handleMouseMove = (e) => {\n    if (!isCropping || draggingPoint === null) return;\n    const rect = canvasRef.current.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n\n    const updated = [...cropPoints];\n    updated[draggingPoint] = { x, y };\n    setCropPoints(updated);\n  };\n\n  const handleMouseUp = () => {\n    setDraggingPoint(null);\n  };\n\n  const handleResize = () => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    const img = new Image();\n    img.onload = () => {\n      canvas.width = dimensions.width;\n      canvas.height = dimensions.height;\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      ctx.drawImage(img, 0, 0, dimensions.width, dimensions.height);\n      saveToHistory();\n    };\n    img.src = imageSrc;\n  };\n\n  const handleCrop = () => {\n    if (cropPoints.length !== 4) return;\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    const img = new Image();\n    img.onload = () => {\n      const srcCoords = cropPoints.map((pt) => [pt.x, pt.y]);\n      const targetSize = 300;\n      const dstCoords = [\n        [0, 0],\n        [targetSize, 0],\n        [targetSize, targetSize],\n        [0, targetSize],\n      ];\n      const transform = perspective(srcCoords, dstCoords);\n      const output = document.createElement(\"canvas\");\n      output.width = targetSize;\n      output.height = targetSize;\n      const outCtx = output.getContext(\"2d\");\n\n      const imageData = outCtx.createImageData(targetSize, targetSize);\n      for (let y = 0; y < targetSize; y++) {\n        for (let x = 0; x < targetSize; x++) {\n          const [sx, sy] = transform.inverse([x, y]);\n          const px = Math.floor(sx);\n          const py = Math.floor(sy);\n          if (px >= 0 && py >= 0 && px < canvas.width && py < canvas.height) {\n            const srcData = ctx.getImageData(px, py, 1, 1).data;\n            const index = (y * targetSize + x) * 4;\n            imageData.data[index] = srcData[0];\n            imageData.data[index + 1] = srcData[1];\n            imageData.data[index + 2] = srcData[2];\n            imageData.data[index + 3] = srcData[3];\n          }\n        }\n      }\n      outCtx.putImageData(imageData, 0, 0);\n      const newSrc = output.toDataURL();\n      setImageSrc(newSrc);\n      setIsCropping(false);\n      setCropPoints([]);\n      saveToHistory();\n    };\n    img.src = imageSrc;\n  };\n\n  const applyFilter = () => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n    for (let i = 0; i < imageData.data.length; i += 4) {\n      const avg = (imageData.data[i] + imageData.data[i + 1] + imageData.data[i + 2]) / 3;\n      imageData.data[i] = avg;\n      imageData.data[i + 1] = avg;\n      imageData.data[i + 2] = avg;\n    }\n    ctx.putImageData(imageData, 0, 0);\n    saveToHistory();\n  };\n\n  const handleDownload = () => {\n    const canvas = canvasRef.current;\n    const url = canvas.toDataURL(\"image/png\");\n    const link = document.createElement(\"a\");\n    link.href = url;\n    link.download = \"edited-image.png\";\n    link.click();\n  };\n\n  return (\n    <div className=\"flex h-screen\">\n      <aside className=\"w-64 bg-gray-100 dark:bg-gray-800 p-4\">\n        <h1 className=\"text-xl font-bold mb-4\">🖌️ Editify</h1>\n\n        <input type=\"file\" accept=\"image/*\" onChange={handleUpload} className=\"mb-4\" />\n\n        <button onClick={() => setShowResize(!showResize)} className=\"w-full py-2 px-4 bg-blue-500 text-white rounded mb-2\">\n          Resize\n        </button>\n\n        {showResize && (\n          <div className=\"space-y-2 mb-4\">\n            <input type=\"number\" placeholder=\"Width\" value={dimensions.width} onChange={(e) => setDimensions({ ...dimensions, width: +e.target.value })} className=\"w-full p-2 border rounded\" />\n            <input type=\"number\" placeholder=\"Height\" value={dimensions.height} onChange={(e) => setDimensions({ ...dimensions, height: +e.target.value })} className=\"w-full p-2 border rounded\" />\n            <button onClick={handleResize} className=\"w-full py-2 px-4 bg-green-600 text-white rounded\">\n              Apply Resize\n            </button>\n          </div>\n        )}\n\n        <button onClick={applyFilter} className=\"w-full py-2 px-4 bg-indigo-600 text-white rounded mb-2\">\n          Grayscale Filter\n        </button>\n\n        <div className=\"mb-2\">\n          <input type=\"text\" value={currentText} onChange={(e) => setCurrentText(e.target.value)} className=\"w-full p-2 border rounded mb-2\" placeholder=\"Enter text\" />\n          <button onClick={() => setIsAddingText(true)} className=\"w-full py-2 px-4 bg-yellow-600 text-white rounded\">\n            Add Text\n          </button>\n        </div>\n\n        <button onClick={undo} className=\"w-full py-2 px-4 bg-gray-500 text-white rounded mb-2\">Undo</button>\n\n        <button className={`w-full py-2 px-4 rounded mb-2 ${isCropping ? \"bg-red-500 text-white\" : \"bg-gray-200 dark:bg-gray-700\"}`} onClick={() => setIsCropping(!isCropping)}>\n          {isCropping ? \"Exit Crop Mode\" : \"Crop\"}\n        </button>\n\n        {isCropping && (\n          <button onClick={handleCrop} className=\"w-full py-2 px-4 bg-yellow-500 text-white rounded mb-2\">\n            Apply Crop\n          </button>\n        )}\n\n        <button onClick={handleDownload} className=\"w-full py-2 px-4 bg-purple-600 text-white rounded\">\n          Download\n        </button>\n      </aside>\n\n      <main className=\"flex-1 flex items-center justify-center bg-white dark:bg-gray-900\">\n        <canvas ref={canvasRef} width={CANVAS_WIDTH} height={CANVAS_HEIGHT} onMouseDown={handleMouseDown} onMouseMove={handleMouseMove} onMouseUp={handleMouseUp} className=\"shadow-lg border border-gray-300\" />\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}