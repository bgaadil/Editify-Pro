{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91883\\\\Downloads\\\\editify-react\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from \"react\";\nimport perspective from \"perspective-transform\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const canvasRef = useRef(null);\n  const [imageSrc, setImageSrc] = useState(null);\n  const [imageSize, setImageSize] = useState({\n    width: 0,\n    height: 0\n  });\n  const [drawOffset, setDrawOffset] = useState({\n    x: 0,\n    y: 0\n  });\n  const [showResize, setShowResize] = useState(false);\n  const [dimensions, setDimensions] = useState({\n    width: \"\",\n    height: \"\"\n  });\n  const [isCropping, setIsCropping] = useState(false);\n  const [cropPoints, setCropPoints] = useState([]);\n  const [draggingPoint, setDraggingPoint] = useState(null);\n  const [textInputs, setTextInputs] = useState([]);\n  const [currentText, setCurrentText] = useState(\"\");\n  const [isAddingText, setIsAddingText] = useState(false);\n  const [history, setHistory] = useState([]);\n  const [redoHistory, setRedoHistory] = useState([]);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [isDrawingMode, setIsDrawingMode] = useState(false);\n  const [brushColor, setBrushColor] = useState(\"#000000\");\n  const [brushSize, setBrushSize] = useState(5);\n  const CANVAS_WIDTH = 800;\n  const CANVAS_HEIGHT = 600;\n  const saveToHistory = () => {\n    const canvas = canvasRef.current;\n    const data = canvas.toDataURL();\n    setHistory(prev => [...prev, data]);\n    setRedoHistory([]);\n  };\n  const undo = () => {\n    if (history.length === 0) return;\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    const img = new Image();\n    const last = history[history.length - 1];\n    img.onload = () => {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      ctx.drawImage(img, 0, 0);\n      setImageSrc(canvas.toDataURL());\n    };\n    img.src = last;\n    setRedoHistory(prev => [...prev, canvas.toDataURL()]);\n    setHistory(prev => prev.slice(0, -1));\n  };\n  const redo = () => {\n    if (redoHistory.length === 0) return;\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    const img = new Image();\n    const last = redoHistory[redoHistory.length - 1];\n    img.onload = () => {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      ctx.drawImage(img, 0, 0);\n      setImageSrc(canvas.toDataURL());\n    };\n    img.src = last;\n    setHistory(prev => [...prev, canvas.toDataURL()]);\n    setRedoHistory(prev => prev.slice(0, -1));\n  };\n  const handleUpload = e => {\n    const file = e.target.files[0];\n    if (!file) return;\n    const reader = new FileReader();\n    reader.onload = event => {\n      const img = new Image();\n      img.onload = () => {\n        const canvas = canvasRef.current;\n        const ctx = canvas.getContext(\"2d\");\n        const widthRatio = CANVAS_WIDTH / img.width;\n        const heightRatio = CANVAS_HEIGHT / img.height;\n        const scale = Math.min(widthRatio, heightRatio);\n        const newWidth = img.width * scale;\n        const newHeight = img.height * scale;\n        const offsetX = (CANVAS_WIDTH - newWidth) / 2;\n        const offsetY = (CANVAS_HEIGHT - newHeight) / 2;\n        canvas.width = CANVAS_WIDTH;\n        canvas.height = CANVAS_HEIGHT;\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        ctx.drawImage(img, offsetX, offsetY, newWidth, newHeight);\n        setImageSrc(event.target.result);\n        setImageSize({\n          width: newWidth,\n          height: newHeight\n        });\n        setDrawOffset({\n          x: offsetX,\n          y: offsetY\n        });\n        setDimensions({\n          width: newWidth,\n          height: newHeight\n        });\n        setCropPoints([{\n          x: offsetX + 20,\n          y: offsetY + 20\n        }, {\n          x: offsetX + newWidth - 20,\n          y: offsetY + 20\n        }, {\n          x: offsetX + newWidth - 20,\n          y: offsetY + newHeight - 20\n        }, {\n          x: offsetX + 20,\n          y: offsetY + newHeight - 20\n        }]);\n        saveToHistory();\n      };\n      img.src = event.target.result;\n    };\n    reader.readAsDataURL(file);\n  };\n  const handleMouseDown = e => {\n    const rect = canvasRef.current.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    if (isAddingText) {\n      setTextInputs([...textInputs, {\n        text: currentText,\n        x,\n        y\n      }]);\n      setIsAddingText(false);\n      setCurrentText(\"\");\n      saveToHistory();\n      return;\n    }\n    if (isCropping) {\n      cropPoints.forEach((point, idx) => {\n        const dx = x - point.x;\n        const dy = y - point.y;\n        if (Math.sqrt(dx * dx + dy * dy) < 10) {\n          setDraggingPoint(idx);\n        }\n      });\n    }\n    if (isDrawingMode) {\n      setIsDrawing(true);\n      const ctx = canvasRef.current.getContext(\"2d\");\n      ctx.strokeStyle = brushColor;\n      ctx.lineWidth = brushSize;\n      ctx.beginPath();\n      ctx.moveTo(x, y);\n    }\n  };\n  const handleMouseMove = e => {\n    const rect = canvasRef.current.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    if (isCropping && draggingPoint !== null) {\n      const updated = [...cropPoints];\n      updated[draggingPoint] = {\n        x,\n        y\n      };\n      setCropPoints(updated);\n    }\n    if (isDrawingMode && isDrawing) {\n      const ctx = canvasRef.current.getContext(\"2d\");\n      ctx.lineTo(x, y);\n      ctx.stroke();\n    }\n  };\n  const handleMouseUp = () => {\n    if (isDrawingMode && isDrawing) {\n      const ctx = canvasRef.current.getContext(\"2d\");\n      ctx.closePath();\n      setIsDrawing(false);\n      saveToHistory();\n    }\n    setDraggingPoint(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex\",\n    children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"w-64 p-4 bg-gray-100 dark:bg-gray-800\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-xl font-bold mb-4\",\n        children: \"\\uD83D\\uDD8C\\uFE0F Editify\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        onChange: handleUpload,\n        className: \"mb-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: undo,\n        className: \"w-full bg-gray-500 text-white py-2 rounded mb-2\",\n        children: \"Undo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: redo,\n        className: \"w-full bg-gray-500 text-white py-2 rounded mb-2\",\n        children: \"Redo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsDrawingMode(!isDrawingMode),\n        className: `w-full py-2 rounded mb-2 ${isDrawingMode ? \"bg-red-600 text-white\" : \"bg-blue-600 text-white\"}`,\n        children: isDrawingMode ? \"Disable Draw\" : \"Enable Draw\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block mb-2\",\n        children: \"Brush Color\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"color\",\n        value: brushColor,\n        onChange: e => setBrushColor(e.target.value),\n        className: \"mb-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block mb-2\",\n        children: \"Brush Size\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: \"1\",\n        max: \"50\",\n        value: brushSize,\n        onChange: e => setBrushSize(Number(e.target.value)),\n        className: \"mb-4 w-full\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"flex-1 flex items-center justify-center bg-white dark:bg-gray-900\",\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        width: CANVAS_WIDTH,\n        height: CANVAS_HEIGHT,\n        onMouseDown: handleMouseDown,\n        onMouseMove: handleMouseMove,\n        onMouseUp: handleMouseUp,\n        className: \"border border-gray-300 shadow-lg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"+I7U6v9vKJHaLeft2v7bn2eHJAc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useRef","useState","useEffect","perspective","jsxDEV","_jsxDEV","App","_s","canvasRef","imageSrc","setImageSrc","imageSize","setImageSize","width","height","drawOffset","setDrawOffset","x","y","showResize","setShowResize","dimensions","setDimensions","isCropping","setIsCropping","cropPoints","setCropPoints","draggingPoint","setDraggingPoint","textInputs","setTextInputs","currentText","setCurrentText","isAddingText","setIsAddingText","history","setHistory","redoHistory","setRedoHistory","isDrawing","setIsDrawing","isDrawingMode","setIsDrawingMode","brushColor","setBrushColor","brushSize","setBrushSize","CANVAS_WIDTH","CANVAS_HEIGHT","saveToHistory","canvas","current","data","toDataURL","prev","undo","length","ctx","getContext","img","Image","last","onload","clearRect","drawImage","src","slice","redo","handleUpload","e","file","target","files","reader","FileReader","event","widthRatio","heightRatio","scale","Math","min","newWidth","newHeight","offsetX","offsetY","result","readAsDataURL","handleMouseDown","rect","getBoundingClientRect","clientX","left","clientY","top","text","forEach","point","idx","dx","dy","sqrt","strokeStyle","lineWidth","beginPath","moveTo","handleMouseMove","updated","lineTo","stroke","handleMouseUp","closePath","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","onClick","value","max","Number","ref","onMouseDown","onMouseMove","onMouseUp","_c","$RefreshReg$"],"sources":["C:/Users/91883/Downloads/editify-react/src/App.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\nimport perspective from \"perspective-transform\";\n\nfunction App() {\n  const canvasRef = useRef(null);\n  const [imageSrc, setImageSrc] = useState(null);\n  const [imageSize, setImageSize] = useState({ width: 0, height: 0 });\n  const [drawOffset, setDrawOffset] = useState({ x: 0, y: 0 });\n  const [showResize, setShowResize] = useState(false);\n  const [dimensions, setDimensions] = useState({ width: \"\", height: \"\" });\n  const [isCropping, setIsCropping] = useState(false);\n  const [cropPoints, setCropPoints] = useState([]);\n  const [draggingPoint, setDraggingPoint] = useState(null);\n  const [textInputs, setTextInputs] = useState([]);\n  const [currentText, setCurrentText] = useState(\"\");\n  const [isAddingText, setIsAddingText] = useState(false);\n  const [history, setHistory] = useState([]);\n  const [redoHistory, setRedoHistory] = useState([]);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [isDrawingMode, setIsDrawingMode] = useState(false);\n  const [brushColor, setBrushColor] = useState(\"#000000\");\n  const [brushSize, setBrushSize] = useState(5);\n\n  const CANVAS_WIDTH = 800;\n  const CANVAS_HEIGHT = 600;\n\n  const saveToHistory = () => {\n    const canvas = canvasRef.current;\n    const data = canvas.toDataURL();\n    setHistory((prev) => [...prev, data]);\n    setRedoHistory([]);\n  };\n\n  const undo = () => {\n    if (history.length === 0) return;\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    const img = new Image();\n    const last = history[history.length - 1];\n    img.onload = () => {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      ctx.drawImage(img, 0, 0);\n      setImageSrc(canvas.toDataURL());\n    };\n    img.src = last;\n    setRedoHistory((prev) => [...prev, canvas.toDataURL()]);\n    setHistory((prev) => prev.slice(0, -1));\n  };\n\n  const redo = () => {\n    if (redoHistory.length === 0) return;\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    const img = new Image();\n    const last = redoHistory[redoHistory.length - 1];\n    img.onload = () => {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      ctx.drawImage(img, 0, 0);\n      setImageSrc(canvas.toDataURL());\n    };\n    img.src = last;\n    setHistory((prev) => [...prev, canvas.toDataURL()]);\n    setRedoHistory((prev) => prev.slice(0, -1));\n  };\n\n  const handleUpload = (e) => {\n    const file = e.target.files[0];\n    if (!file) return;\n\n    const reader = new FileReader();\n    reader.onload = (event) => {\n      const img = new Image();\n      img.onload = () => {\n        const canvas = canvasRef.current;\n        const ctx = canvas.getContext(\"2d\");\n\n        const widthRatio = CANVAS_WIDTH / img.width;\n        const heightRatio = CANVAS_HEIGHT / img.height;\n        const scale = Math.min(widthRatio, heightRatio);\n\n        const newWidth = img.width * scale;\n        const newHeight = img.height * scale;\n        const offsetX = (CANVAS_WIDTH - newWidth) / 2;\n        const offsetY = (CANVAS_HEIGHT - newHeight) / 2;\n\n        canvas.width = CANVAS_WIDTH;\n        canvas.height = CANVAS_HEIGHT;\n\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        ctx.drawImage(img, offsetX, offsetY, newWidth, newHeight);\n\n        setImageSrc(event.target.result);\n        setImageSize({ width: newWidth, height: newHeight });\n        setDrawOffset({ x: offsetX, y: offsetY });\n        setDimensions({ width: newWidth, height: newHeight });\n\n        setCropPoints([\n          { x: offsetX + 20, y: offsetY + 20 },\n          { x: offsetX + newWidth - 20, y: offsetY + 20 },\n          { x: offsetX + newWidth - 20, y: offsetY + newHeight - 20 },\n          { x: offsetX + 20, y: offsetY + newHeight - 20 },\n        ]);\n        saveToHistory();\n      };\n      img.src = event.target.result;\n    };\n    reader.readAsDataURL(file);\n  };\n\n  const handleMouseDown = (e) => {\n    const rect = canvasRef.current.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n\n    if (isAddingText) {\n      setTextInputs([...textInputs, { text: currentText, x, y }]);\n      setIsAddingText(false);\n      setCurrentText(\"\");\n      saveToHistory();\n      return;\n    }\n\n    if (isCropping) {\n      cropPoints.forEach((point, idx) => {\n        const dx = x - point.x;\n        const dy = y - point.y;\n        if (Math.sqrt(dx * dx + dy * dy) < 10) {\n          setDraggingPoint(idx);\n        }\n      });\n    }\n\n    if (isDrawingMode) {\n      setIsDrawing(true);\n      const ctx = canvasRef.current.getContext(\"2d\");\n      ctx.strokeStyle = brushColor;\n      ctx.lineWidth = brushSize;\n      ctx.beginPath();\n      ctx.moveTo(x, y);\n    }\n  };\n\n  const handleMouseMove = (e) => {\n    const rect = canvasRef.current.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n\n    if (isCropping && draggingPoint !== null) {\n      const updated = [...cropPoints];\n      updated[draggingPoint] = { x, y };\n      setCropPoints(updated);\n    }\n\n    if (isDrawingMode && isDrawing) {\n      const ctx = canvasRef.current.getContext(\"2d\");\n      ctx.lineTo(x, y);\n      ctx.stroke();\n    }\n  };\n\n  const handleMouseUp = () => {\n    if (isDrawingMode && isDrawing) {\n      const ctx = canvasRef.current.getContext(\"2d\");\n      ctx.closePath();\n      setIsDrawing(false);\n      saveToHistory();\n    }\n    setDraggingPoint(null);\n  };\n\n  return (\n    <div className=\"flex\">\n      <aside className=\"w-64 p-4 bg-gray-100 dark:bg-gray-800\">\n        <h1 className=\"text-xl font-bold mb-4\">🖌️ Editify</h1>\n\n        <input type=\"file\" accept=\"image/*\" onChange={handleUpload} className=\"mb-4\" />\n\n        <button onClick={undo} className=\"w-full bg-gray-500 text-white py-2 rounded mb-2\">Undo</button>\n        <button onClick={redo} className=\"w-full bg-gray-500 text-white py-2 rounded mb-2\">Redo</button>\n\n        <button onClick={() => setIsDrawingMode(!isDrawingMode)} className={`w-full py-2 rounded mb-2 ${isDrawingMode ? \"bg-red-600 text-white\" : \"bg-blue-600 text-white\"}`}>\n          {isDrawingMode ? \"Disable Draw\" : \"Enable Draw\"}\n        </button>\n\n        <label className=\"block mb-2\">Brush Color</label>\n        <input type=\"color\" value={brushColor} onChange={(e) => setBrushColor(e.target.value)} className=\"mb-4\" />\n\n        <label className=\"block mb-2\">Brush Size</label>\n        <input type=\"range\" min=\"1\" max=\"50\" value={brushSize} onChange={(e) => setBrushSize(Number(e.target.value))} className=\"mb-4 w-full\" />\n      </aside>\n\n      <main className=\"flex-1 flex items-center justify-center bg-white dark:bg-gray-900\">\n        <canvas\n          ref={canvasRef}\n          width={CANVAS_WIDTH}\n          height={CANVAS_HEIGHT}\n          onMouseDown={handleMouseDown}\n          onMouseMove={handleMouseMove}\n          onMouseUp={handleMouseUp}\n          className=\"border border-gray-300 shadow-lg\"\n        />\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}